; Copyright (C) 2013 Jolla Ltd.
; All rights reserved.
;
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software Foundation, Inc.,
; 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

[base]
; Django secret key, generate one using
; django-admin generate_secret_key --settings=reports.settings
secret_key = FF
; Comma separated list of emails to receive error messages
admin_emails =
; Enable debug
debug = yes
; Enable django debug toolbar
use_debug_toolbar = no
; Comma separate list of IP addresses to see debug messages
internal_ips =
; Directory used for Yum cache, defaults to users home.
; Unique directory in form 'yum-USER-XXXX' is created under this path
yum_cache_dir =

[web]
; The URL prefix django will be served under
url_prefix=reports
; Where the document root for the server lives
doc_root = /srv/www/%(url_prefix)s

; Directory where static files are collected
static_root = %(doc_root)s/static/
; URL where static files are served
static_url = /%(url_prefix)s/static/

; Use HTTP remote user authentication backed (i.e. auth done by web server)
use_http_remote_user = no

[db]
; Database engine to use
engine = mysql
; Name of database
name = reports
; Database username
user = reports
; Database password
pass = reports
; Database host
host = localhost
; Database port
port =

[cache]
; The django cache backend to use
backend = django.core.cache.backends.db.DatabaseCache
; The cache location, depends on the backend
location = reports_cache_table
; Cache timeout, defaults to one day
timeout = 86400
; Additional options dict (in JSON) to be passed to the cache backend
; options = {"MAX_ENTRIES": 1000}
options = {}
